
Runner.buttonEvents["novaPastUnpaid"]=function(pageObj,proxy,pageid){pageObj.buttonNames[pageObj.buttonNames.length]='novaPastUnpaid';if(!pageObj.buttonEventBefore['novaPastUnpaid']){pageObj.buttonEventBefore['novaPastUnpaid']=function(params,ctrl,pageObj,proxy,pageid,rowData,row,submit){var ajax=ctrl;var ctrlDialerAgent=Runner.getControl(pageid,'dialerAgent');var ctrlcallHangup=Runner.getControl(pageid,'callHangup');var ctrlcallStart=Runner.getControl(pageid,'callStart');var ctrlTalkTime=Runner.getControl(pageid,'talkTime');var ctrlCallStatus=Runner.getControl(pageid,'callStatusId');var ctrlCallDenialReason=Runner.getControl(pageid,'callDenialReasonID');var ctrlCallClassificationID=Runner.getControl(pageid,'callClassificationID');var ctrlCallSubClassificationID=Runner.getControl(pageid,'callSubClassificationID');if(ctrlcallHangup.isEmpty()){alert('Δεν έχει προηγηθεί τερματισμός της κλήσης');return false;};if(ctrlCallSubClassificationID.getValue()==1004){ctrlCallStatus.setValue(23);ctrlCallStatus.on('keyup');ctrlCallStatus.on('change');ctrlCallDenialReason.setValue(11);ctrlCallDenialReason.reset();ctrlCallDenialReason.setValue(11);}
params["apicallMode"]=proxy['agentApiUrl']+
ctrlDialerAgent.getValue()+"&function=external_status&value=Neg";var ctrlPauseAfterCall=Runner.getControl(pageid,'pauseAfterCall');params["pauseMode"]=ctrlPauseAfterCall.getValue();params["apicallSetPause"]=proxy['agentApiUrl']+
ctrlDialerAgent.getValue()+"&function=external_pause&value=PAUSE";params["apiSetPauseReason"]=proxy['agentApiUrl']+
ctrlDialerAgent.getValue()+"&function=pause_code&value=MANUAL";return true;}}
if(!pageObj.buttonEventAfter['novaPastUnpaid']){pageObj.buttonEventAfter['novaPastUnpaid']=function(result,ctrl,pageObj,proxy,pageid,rowData,row,params){var ajax=ctrl;var ctrlcallStart=Runner.getControl(pageid,'callStart');var ctrlcallHangup=Runner.getControl(pageid,'callHangup');var ctrlcallEnd=Runner.getControl(pageid,'callEnd');var ctrltalkTime=Runner.getControl(pageid,'talkTime');var ctrltypingTime=Runner.getControl(pageid,'typingTime');var ctrltotalCallTime=Runner.getControl(pageid,'totalCallTime');if(ctrlcallEnd.isEmpty()){ctrlcallEnd.setValue(moment());ctrlcallEnd.makeReadonly();ctrltypingTime.setValue((ctrlcallEnd.getValue()-ctrlcallHangup.getValue())/1000);ctrltypingTime.makeReadonly();ctrltotalCallTime.setValue((ctrlcallEnd.getValue()-ctrlcallStart.getValue())/1000);ctrltotalCallTime.makeReadonly();}
$("#saveButton1").click();}}
$('a[id="novaPastUnpaid"]').each(function(){if($(this).closest('.gridRowAdd').length){return;}
this.id="novaPastUnpaid"+"_"+Runner.genId();var button_novaPastUnpaid=new Runner.form.Button({id:this.id,btnName:"novaPastUnpaid"});button_novaPastUnpaid.init({args:[pageObj,proxy,pageid]});});};